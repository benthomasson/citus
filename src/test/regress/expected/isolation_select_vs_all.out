Parsed test spec with 2 sessions

starting permutation: s1-begin s1-router-select s2-router-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s2-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-router-select s2-multi-shard-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s2-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-multi-shard-select s2-router-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s2-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-multi-shard-select s2-multi-shard-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s2-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-router-select s2-insert s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s2-insert: INSERT INTO select_hash VALUES(0, 'k');
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

6              

starting permutation: s1-begin s1-router-select s2-update s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s2-update: UPDATE select_hash SET data = 'l' WHERE id = 0;
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-router-select s2-delete s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s2-delete: DELETE FROM select_hash WHERE id = 1;
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

4              

starting permutation: s1-begin s1-router-select s2-truncate s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s2-truncate: TRUNCATE select_hash; <waiting ...>
step s1-commit: COMMIT;
step s2-truncate: <... completed>
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

0              

starting permutation: s1-begin s1-router-select s2-drop s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s2-drop: DROP TABLE select_hash; <waiting ...>
step s1-commit: COMMIT;
step s2-drop: <... completed>
step s1-select-count: SELECT COUNT(*) FROM select_hash;
ERROR:  relation "select_hash" does not exist

starting permutation: s1-begin s1-router-select s2-ddl-create-index s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s2-ddl-create-index: CREATE INDEX select_hash_index ON select_hash(id);
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-ddl-create-index s1-begin s1-router-select s2-ddl-drop-index s1-commit s1-select-count
step s1-ddl-create-index: CREATE INDEX select_hash_index ON select_hash(id);
step s1-begin: BEGIN;
step s1-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s2-ddl-drop-index: DROP INDEX select_hash_index; <waiting ...>
step s1-commit: COMMIT;
step s2-ddl-drop-index: <... completed>
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-router-select s2-ddl-create-index-concurrently s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s2-ddl-create-index-concurrently: CREATE INDEX CONCURRENTLY select_hash_index ON select_hash(id);
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-router-select s2-ddl-add-column s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s2-ddl-add-column: ALTER TABLE select_hash ADD new_column int DEFAULT 0; <waiting ...>
step s1-commit: COMMIT;
step s2-ddl-add-column: <... completed>
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-ddl-add-column s1-begin s1-router-select s2-ddl-drop-column s1-commit s1-select-count
step s1-ddl-add-column: ALTER TABLE select_hash ADD new_column int DEFAULT 0;
step s1-begin: BEGIN;
step s1-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           new_column     

1               b             0              
step s2-ddl-drop-column: ALTER TABLE select_hash DROP new_column; <waiting ...>
step s1-commit: COMMIT;
step s2-ddl-drop-column: <... completed>
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-router-select s2-table-size s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s2-table-size: SELECT citus_table_size('select_hash'); SELECT citus_relation_size('select_hash'); SELECT citus_total_relation_size('select_hash');
citus_table_size

57344          
citus_relation_size

24576          
citus_total_relation_size

57344          
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-router-select s2-master-modify-multiple-shards s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s2-master-modify-multiple-shards: SELECT master_modify_multiple_shards('DELETE FROM select_hash;');
master_modify_multiple_shards

5              
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

0              

starting permutation: s1-drop s1-create-non-distributed-table s1-begin s1-router-select s2-distribute-table s1-commit s1-select-count
step s1-drop: DROP TABLE select_hash;
step s1-create-non-distributed-table: CREATE TABLE select_hash(id integer, data text); COPY select_hash FROM PROGRAM 'echo 0, a\\n1, b\\n2, c\\n3, d\\n4, e' WITH CSV;
step s1-begin: BEGIN;
step s1-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s2-distribute-table: SELECT create_distributed_table('select_hash', 'id');
create_distributed_table

               
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-insert s2-router-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-insert: INSERT INTO select_hash VALUES(0, 'k');
step s2-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

6              

starting permutation: s1-begin s1-update s2-router-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-update: UPDATE select_hash SET data = 'l' WHERE id = 0;
step s2-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-delete s2-router-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-delete: DELETE FROM select_hash WHERE id = 1;
step s2-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

4              

starting permutation: s1-begin s1-truncate s2-router-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-truncate: TRUNCATE select_hash;
step s2-router-select: SELECT * FROM select_hash WHERE id = 1; <waiting ...>
step s1-commit: COMMIT;
step s2-router-select: <... completed>
id             data           

step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

0              

starting permutation: s1-begin s1-drop s2-router-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-drop: DROP TABLE select_hash;
step s2-router-select: SELECT * FROM select_hash WHERE id = 1; <waiting ...>
step s1-commit: COMMIT;
step s2-router-select: <... completed>
error in steps s1-commit s2-router-select: ERROR:  relation "select_hash" does not exist
step s1-select-count: SELECT COUNT(*) FROM select_hash;
ERROR:  relation "select_hash" does not exist

starting permutation: s1-begin s1-ddl-create-index s2-router-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-ddl-create-index: CREATE INDEX select_hash_index ON select_hash(id);
step s2-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-ddl-create-index s1-begin s1-ddl-drop-index s2-router-select s1-commit s1-select-count
step s1-ddl-create-index: CREATE INDEX select_hash_index ON select_hash(id);
step s1-begin: BEGIN;
step s1-ddl-drop-index: DROP INDEX select_hash_index;
step s2-router-select: SELECT * FROM select_hash WHERE id = 1; <waiting ...>
step s1-commit: COMMIT;
step s2-router-select: <... completed>
id             data           

1               b             
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-ddl-add-column s2-router-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-ddl-add-column: ALTER TABLE select_hash ADD new_column int DEFAULT 0;
step s2-router-select: SELECT * FROM select_hash WHERE id = 1; <waiting ...>
step s1-commit: COMMIT;
step s2-router-select: <... completed>
id             data           new_column     

1               b             0              
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-ddl-add-column s1-begin s1-ddl-drop-column s2-router-select s1-commit s1-select-count
step s1-ddl-add-column: ALTER TABLE select_hash ADD new_column int DEFAULT 0;
step s1-begin: BEGIN;
step s1-ddl-drop-column: ALTER TABLE select_hash DROP new_column;
step s2-router-select: SELECT * FROM select_hash WHERE id = 1; <waiting ...>
step s1-commit: COMMIT;
step s2-router-select: <... completed>
id             data           

1               b             
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-table-size s2-router-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-table-size: SELECT citus_table_size('select_hash'); SELECT citus_relation_size('select_hash'); SELECT citus_total_relation_size('select_hash');
citus_table_size

57344          
citus_relation_size

24576          
citus_total_relation_size

57344          
step s2-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-master-modify-multiple-shards s2-router-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-master-modify-multiple-shards: SELECT master_modify_multiple_shards('DELETE FROM select_hash;');
master_modify_multiple_shards

5              
step s2-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

0              

starting permutation: s1-drop s1-create-non-distributed-table s1-begin s1-distribute-table s2-router-select s1-commit s1-select-count
step s1-drop: DROP TABLE select_hash;
step s1-create-non-distributed-table: CREATE TABLE select_hash(id integer, data text); COPY select_hash FROM PROGRAM 'echo 0, a\\n1, b\\n2, c\\n3, d\\n4, e' WITH CSV;
step s1-begin: BEGIN;
step s1-distribute-table: SELECT create_distributed_table('select_hash', 'id');
create_distributed_table

               
step s2-router-select: SELECT * FROM select_hash WHERE id = 1;
id             data           

1               b             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-multi-shard-select s2-insert s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s2-insert: INSERT INTO select_hash VALUES(0, 'k');
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

6              

starting permutation: s1-begin s1-multi-shard-select s2-update s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s2-update: UPDATE select_hash SET data = 'l' WHERE id = 0;
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-multi-shard-select s2-delete s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s2-delete: DELETE FROM select_hash WHERE id = 1;
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

4              

starting permutation: s1-begin s1-multi-shard-select s2-truncate s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s2-truncate: TRUNCATE select_hash; <waiting ...>
step s1-commit: COMMIT;
step s2-truncate: <... completed>
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

0              

starting permutation: s1-begin s1-multi-shard-select s2-drop s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s2-drop: DROP TABLE select_hash; <waiting ...>
step s1-commit: COMMIT;
step s2-drop: <... completed>
step s1-select-count: SELECT COUNT(*) FROM select_hash;
ERROR:  relation "select_hash" does not exist

starting permutation: s1-begin s1-multi-shard-select s2-ddl-create-index s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s2-ddl-create-index: CREATE INDEX select_hash_index ON select_hash(id);
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-ddl-create-index s1-begin s1-multi-shard-select s2-ddl-drop-index s1-commit s1-select-count
step s1-ddl-create-index: CREATE INDEX select_hash_index ON select_hash(id);
step s1-begin: BEGIN;
step s1-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s2-ddl-drop-index: DROP INDEX select_hash_index; <waiting ...>
step s1-commit: COMMIT;
step s2-ddl-drop-index: <... completed>
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-multi-shard-select s2-ddl-create-index-concurrently s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s2-ddl-create-index-concurrently: CREATE INDEX CONCURRENTLY select_hash_index ON select_hash(id);
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-multi-shard-select s2-ddl-add-column s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s2-ddl-add-column: ALTER TABLE select_hash ADD new_column int DEFAULT 0; <waiting ...>
step s1-commit: COMMIT;
step s2-ddl-add-column: <... completed>
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-ddl-add-column s1-begin s1-multi-shard-select s2-ddl-drop-column s1-commit s1-select-count
step s1-ddl-add-column: ALTER TABLE select_hash ADD new_column int DEFAULT 0;
step s1-begin: BEGIN;
step s1-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           new_column     

0               a             0              
1               b             0              
2               c             0              
3               d             0              
4               e             0              
step s2-ddl-drop-column: ALTER TABLE select_hash DROP new_column; <waiting ...>
step s1-commit: COMMIT;
step s2-ddl-drop-column: <... completed>
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-multi-shard-select s2-table-size s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s2-table-size: SELECT citus_table_size('select_hash'); SELECT citus_relation_size('select_hash'); SELECT citus_total_relation_size('select_hash');
citus_table_size

57344          
citus_relation_size

24576          
citus_total_relation_size

57344          
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-multi-shard-select s2-master-modify-multiple-shards s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s2-master-modify-multiple-shards: SELECT master_modify_multiple_shards('DELETE FROM select_hash;');
master_modify_multiple_shards

5              
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

0              

starting permutation: s1-drop s1-create-non-distributed-table s1-begin s1-multi-shard-select s2-distribute-table s1-commit s1-select-count
step s1-drop: DROP TABLE select_hash;
step s1-create-non-distributed-table: CREATE TABLE select_hash(id integer, data text); COPY select_hash FROM PROGRAM 'echo 0, a\\n1, b\\n2, c\\n3, d\\n4, e' WITH CSV;
step s1-begin: BEGIN;
step s1-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s2-distribute-table: SELECT create_distributed_table('select_hash', 'id');
create_distributed_table

               
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-insert s2-multi-shard-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-insert: INSERT INTO select_hash VALUES(0, 'k');
step s2-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

6              

starting permutation: s1-begin s1-update s2-multi-shard-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-update: UPDATE select_hash SET data = 'l' WHERE id = 0;
step s2-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-delete s2-multi-shard-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-delete: DELETE FROM select_hash WHERE id = 1;
step s2-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

4              

starting permutation: s1-begin s1-truncate s2-multi-shard-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-truncate: TRUNCATE select_hash;
step s2-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data; <waiting ...>
step s1-commit: COMMIT;
step s2-multi-shard-select: <... completed>
id             data           

step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

0              

starting permutation: s1-begin s1-drop s2-multi-shard-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-drop: DROP TABLE select_hash;
step s2-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data; <waiting ...>
step s1-commit: COMMIT;
step s2-multi-shard-select: <... completed>
error in steps s1-commit s2-multi-shard-select: ERROR:  relation "select_hash" does not exist
step s1-select-count: SELECT COUNT(*) FROM select_hash;
ERROR:  relation "select_hash" does not exist

starting permutation: s1-begin s1-ddl-create-index s2-multi-shard-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-ddl-create-index: CREATE INDEX select_hash_index ON select_hash(id);
step s2-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-ddl-create-index s1-begin s1-ddl-drop-index s2-multi-shard-select s1-commit s1-select-count
step s1-ddl-create-index: CREATE INDEX select_hash_index ON select_hash(id);
step s1-begin: BEGIN;
step s1-ddl-drop-index: DROP INDEX select_hash_index;
step s2-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data; <waiting ...>
step s1-commit: COMMIT;
step s2-multi-shard-select: <... completed>
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-ddl-add-column s2-multi-shard-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-ddl-add-column: ALTER TABLE select_hash ADD new_column int DEFAULT 0;
step s2-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data; <waiting ...>
step s1-commit: COMMIT;
step s2-multi-shard-select: <... completed>
id             data           new_column     

0               a             0              
1               b             0              
2               c             0              
3               d             0              
4               e             0              
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-ddl-add-column s1-begin s1-ddl-drop-column s2-multi-shard-select s1-commit s1-select-count
step s1-ddl-add-column: ALTER TABLE select_hash ADD new_column int DEFAULT 0;
step s1-begin: BEGIN;
step s1-ddl-drop-column: ALTER TABLE select_hash DROP new_column;
step s2-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data; <waiting ...>
step s1-commit: COMMIT;
step s2-multi-shard-select: <... completed>
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-table-size s2-multi-shard-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-table-size: SELECT citus_table_size('select_hash'); SELECT citus_relation_size('select_hash'); SELECT citus_total_relation_size('select_hash');
citus_table_size

57344          
citus_relation_size

24576          
citus_total_relation_size

57344          
step s2-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              

starting permutation: s1-begin s1-master-modify-multiple-shards s2-multi-shard-select s1-commit s1-select-count
step s1-begin: BEGIN;
step s1-master-modify-multiple-shards: SELECT master_modify_multiple_shards('DELETE FROM select_hash;');
master_modify_multiple_shards

5              
step s2-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

0              

starting permutation: s1-drop s1-create-non-distributed-table s1-begin s1-distribute-table s2-multi-shard-select s1-commit s1-select-count
step s1-drop: DROP TABLE select_hash;
step s1-create-non-distributed-table: CREATE TABLE select_hash(id integer, data text); COPY select_hash FROM PROGRAM 'echo 0, a\\n1, b\\n2, c\\n3, d\\n4, e' WITH CSV;
step s1-begin: BEGIN;
step s1-distribute-table: SELECT create_distributed_table('select_hash', 'id');
create_distributed_table

               
step s2-multi-shard-select: SELECT * FROM select_hash ORDER BY id, data;
id             data           

0               a             
1               b             
2               c             
3               d             
4               e             
step s1-commit: COMMIT;
step s1-select-count: SELECT COUNT(*) FROM select_hash;
count          

5              
